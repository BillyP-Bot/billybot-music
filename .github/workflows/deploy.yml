name: deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: self-hosted
    environment: Raspberry Pi 5
    env:
      APP_NAME: billybot-music
      APP_DIR: /home/pi/apps/billybot-music
      ENV_DIR: /home/pi/env/billybot-music
      REQ_FILE: config/requirements.txt

    steps:
    - uses: actions/checkout@v2

    - name: Copy project files to app directory
      run: |
        rm -rf $APP_DIR
        mkdir $APP_DIR
        cp -rf ./{*,.[^.]*} $APP_DIR/ 2>/dev/null || true

    - name: Configure app environment
      run: |
        cd $APP_DIR

        # Copy environment files to app directory
        cp -rf $ENV_DIR/{*,.[^.]*} $APP_DIR/ 2>/dev/null || true
        source venv/bin/activate
        
        # Check if requirements file has changed or does not exist
        CURRENT_HASH=$(md5sum $REQ_FILE | awk '{print $1}')
        HASH_FILE="$ENV_DIR/.requirements_hash"
        
        if [ ! -f "$HASH_FILE" ] || [ "$(cat $HASH_FILE)" != "$CURRENT_HASH" ]; then
          echo "$REQ_FILE has changed or does not exist in app directory. Installing dependencies..."
          pip install -r $REQ_FILE
          echo "$CURRENT_HASH" > "$HASH_FILE"
        else
          echo "$REQ_FILE has not changed. Skipping dependency installation."
        fi

    - name: Install/update systemd service to run app
      run: |
        cat > /tmp/$APP_NAME.service << EOF
        [Unit]
        Description=$APP_NAME
        After=network.target

        [Service]
        Type=simple
        User=pi
        WorkingDirectory=$APP_DIR
        ExecStart=$APP_DIR/venv/bin/python $APP_DIR/run.py
        Restart=on-failure

        [Install]
        WantedBy=multi-user.target
        EOF
        sudo mv /tmp/$APP_NAME.service /etc/systemd/system/
        sudo systemctl daemon-reload
        sudo systemctl enable $APP_NAME.service
        sudo systemctl restart $APP_NAME.service
        sudo systemctl status $APP_NAME.service
